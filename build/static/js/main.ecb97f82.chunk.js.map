{"version":3,"sources":["actions/index.js","actions/actionTypes.js","components/Card.js","components/Container.js","util/index.js","pages/Home.js","components/ListItem.js","pages/Cart.js","components/UserForm.js","pages/Form.js","components/FlexBox.js","pages/Profile.js","reducers/index.js","reducers/cart.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["addToCart","id","type","Meta","Card","Title","Typography","mapDispatchToProps","connect","pizza","name","desc","image","cost","title","level","style","textAlign","actions","icon","PlusOutlined","onClick","message","success","Math","floor","cover","alt","src","description","children","marginLeft","marginRight","isLogged","localStorage","getItem","getEmail","token","jwt_decode","identity","email","state","count","Object","values","cart","reduce","a","b","useState","pizzas","setPizzas","useEffect","getPizzas","axios","get","then","res","data","extra","to","key","UserOutlined","size","ShoppingCartOutlined","Container","grid","gutter","column","dataSource","renderItem","Item","List","removeFromCart","removeAllFromCart","amount","MinusOutlined","DeleteOutlined","avatar","layout","labelCol","span","wrapperCol","validateMessages","required","order","setOrder","total","setTotal","status","setStatus","getOrder","menu","tempArray","tempTotal","keys","acc","pizzaId","push","onBack","window","history","back","length","itemLayout","p","ListItem","onFinish","addressFirstLine","addressSecondLine","phone","post","response","catch","e","console","log","postOrder","address","label","help","prefix","offset","htmlType","Text","user","password","ok","setItem","access_token","removeItem","err","hasFeedback","validateStatus","Password","rules","getFieldValue","validator","rule","value","Promise","reject","resolve","dependencies","setType","width","tabList","tab","activeTabKey","onTabChange","UserForm","justify","align","setHistory","setMenu","columns","dataIndex","render","renderPizza","renderTotal","getHistory","getMenu","params","cell","s","FlexBox","combineReducers","action","aState","rState","k","rlState","createStore","rootReducer","store","exact","path","component","Home","Cart","Form","Profile","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ecb97f82.chunk.js","sourcesContent":["import {\n    ADD_TO_CART,\n    REMOVE_FROM_CART,\n    REMOVE_ALL_FROM_CART,\n} from \"./actionTypes\";\n\nexport const addToCart = (id) => ({ type: ADD_TO_CART, id });\nexport const removeFromCart = (id) => ({ type: REMOVE_FROM_CART, id });\nexport const removeAllFromCart = (id) => ({ type: REMOVE_ALL_FROM_CART, id });\n","export const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const REMOVE_ALL_FROM_CART = \"REMOVE_ALL_FROM_CART\";\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Typography, Button, message } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport { addToCart } from \"../actions\";\n\nconst { Meta } = Card;\nconst { Title } = Typography;\n\nlet Card_ = ({ pizza, addToCart }) => {\n    const { id, name, desc, image, cost } = pizza;\n\n    const onClick = () => {\n        addToCart(id);\n        message.success(`${name} added to the cart!`);\n    };\n\n    return (\n        <Card\n            title={\n                <Title level={4} style={{ textAlign: \"center\" }}>\n                    {name}\n                </Title>\n            }\n            actions={[\n                <Title level={4}>${cost}</Title>,\n                <Button\n                    icon={<PlusOutlined />}\n                    type=\"text\"\n                    onClick={onClick}\n                />,\n                <Title level={4}>€{Math.floor(cost * 0.8)}</Title>,\n            ]}\n            cover={<img alt={name} src={image} />}\n        >\n            <Meta\n                // title={<Title level={4}>{name}</Title>}\n                description={desc}\n            />\n        </Card>\n    );\n};\n\nlet mapDispatchToProps = { addToCart };\n\nexport default connect(null, mapDispatchToProps)(Card_);\n","import * as React from \"react\";\n\nexport default ({ children }) => (\n    <div style={{ marginLeft: 150, marginRight: 150 }}>{children}</div>\n);\n","import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const signup = (user) => {\n    return axios\n        .post(\"/api/signup\", {\n            email: user.email,\n            password: user.password,\n        })\n        .then((response) => response.data)\n        .then((response) => {\n            if (response.ok) {\n                localStorage.setItem(\"usertoken\", response.access_token);\n            } else {\n                localStorage.removeItem(\"usertoken\");\n            }\n            return response;\n        })\n        .catch((e) => console.log(e));\n};\n\nexport const login = (user) => {\n    return axios\n        .post(\"/api/login\", {\n            email: user.email,\n            password: user.password,\n        })\n        .then((response) => response.data)\n        .then((response) => {\n            if (response.ok) {\n                localStorage.setItem(\"usertoken\", response.access_token);\n            } else {\n                localStorage.removeItem(\"usertoken\");\n            }\n            return response;\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n};\n\nexport const logout = () => {\n    localStorage.removeItem(\"usertoken\");\n};\n\nexport const isLogged = () => {\n    const token = localStorage.getItem(\"usertoken\");\n    return !!token;\n};\n\nexport const getEmail = () => {\n    const token = localStorage.getItem(\"usertoken\");\n    if (token) {\n        const decoded = jwt_decode(token);\n        return decoded.identity.email;\n    }\n};\n\nexport const postOrder = (order) => {\n    return axios\n        .post(\"/api/order\", order)\n        .then((response) => response.data)\n        .catch((e) => console.log(e));\n};\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { List, PageHeader, Button, Badge } from \"antd\";\nimport { UserOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\n\nimport Card from \"../components/Card\";\nimport Container from \"../components/Container\";\n\nimport { isLogged } from \"../util\";\n\nconst Home = ({ count }) => {\n    let [pizzas, setPizzas] = useState([]);\n    useEffect(() => {\n        getPizzas();\n    }, []);\n\n    const getPizzas = () => {\n        axios\n            .get(\"/api/pizzas\")\n            .then((res) => res.data)\n            .then((pizzas) => setPizzas(pizzas));\n    };\n    isLogged();\n\n    return (\n        <>\n            <PageHeader\n                title=\"Let's order some pizza!\"\n                extra={[\n                    <Link to={isLogged() ? \"./profile\" : \"./user\"}>\n                        <Button\n                            key=\"account\"\n                            icon={<UserOutlined />}\n                            size=\"large\"\n                        />\n                    </Link>,\n                    <Link to=\"./cart\">\n                        <Button\n                            key=\"cart\"\n                            icon={\n                                <Badge count={count}>\n                                    <ShoppingCartOutlined />\n                                </Badge>\n                            }\n                            size=\"large\"\n                        />\n                    </Link>,\n                ]}\n            />\n            <Container>\n                <List\n                    grid={{ gutter: 32, column: 6 }}\n                    dataSource={pizzas}\n                    renderItem={(pizza) => (\n                        <List.Item key={pizza.id}>\n                            <Card pizza={pizza} />\n                        </List.Item>\n                    )}\n                />\n            </Container>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    count: Object.values(state.cart).reduce((a, b) => a + b, 0),\n});\n\nexport default connect(mapStateToProps)(Home);\n","import * as React from \"react\";\nimport { List, Avatar, Button, Typography } from \"antd\";\nimport { PlusOutlined, MinusOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\n\nimport { addToCart, removeFromCart, removeAllFromCart } from \"../actions\";\n\nconst { Item } = List;\nconst { Title } = Typography;\n\nconst ItemCard = ({ pizza, addToCart, removeFromCart, removeAllFromCart }) => {\n    const { id, name, desc, cost, image, amount } = pizza;\n    return (\n        <Item\n            actions={[\n                <Button\n                    icon={<MinusOutlined />}\n                    onClick={() => removeFromCart(id)}\n                />,\n                <Title level={4}>{amount}</Title>,\n                <Button\n                    icon={<PlusOutlined />}\n                    onClick={() => addToCart(id)}\n                />,\n                <Title level={4}>\n                    ${amount * cost} (€{Math.floor(amount * cost * 0.8)})\n                </Title>,\n                <Button\n                    icon={<DeleteOutlined />}\n                    onClick={() => removeAllFromCart(id)}\n                />,\n            ]}\n        >\n            <Item.Meta\n                avatar={<Avatar size={64} src={image} />}\n                title={\n                    <Title level={4}>\n                        {name} — ${cost} (€{Math.floor(cost * 0.8)})\n                    </Title>\n                }\n                description={desc}\n            />\n        </Item>\n    );\n};\n\nconst mapDispatchToProps = {\n    addToCart,\n    removeFromCart,\n    removeAllFromCart,\n};\n\nexport default connect(null, mapDispatchToProps)(ItemCard);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport {\n    Form,\n    Input,\n    Button,\n    PageHeader,\n    Badge,\n    Divider,\n    List,\n    Typography,\n} from \"antd\";\nimport { UserOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\n\nimport ListItem from \"../components/ListItem\";\nimport Container from \"../components/Container\";\nimport { isLogged, postOrder, getEmail } from \"../util\";\n\nconst { Title } = Typography;\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 8 },\n};\n\nconst validateMessages = {\n    required: \"${label} is required!\",\n};\n\nconst Cart = ({ pizzas }) => {\n    const [order, setOrder] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [status, setStatus] = useState(0);\n\n    useEffect(() => getOrder(), [pizzas]);\n\n    const getOrder = () => {\n        axios\n            .get(\"/api/pizzas\")\n            .then((res) => res.data)\n            .then((menu) => {\n                let tempArray = [];\n                let tempTotal = Object.keys(pizzas).reduce((acc, pizzaId) => {\n                    tempArray.push({\n                        ...menu[pizzaId - 1],\n                        amount: pizzas[pizzaId],\n                    });\n                    acc += pizzas[pizzaId] * menu[pizzaId - 1].cost;\n                    return acc;\n                }, 0);\n                setOrder(tempArray);\n                setTotal(tempTotal);\n            });\n    };\n\n    const count = Object.values(pizzas).reduce((a, b) => a + b, 0);\n    const onFinish = ({ addressFirstLine, addressSecondLine, phone }) => {\n        let data = {\n            email: isLogged() ? getEmail() : \"\",\n            pizzas,\n            address: addressFirstLine + \"\\n\" + addressSecondLine,\n            phone,\n        };\n        postOrder(data).then((res) => setStatus(res.id));\n    };\n\n    // let currentOrder = [];\n    // for (let pizzaId of Object.keys(pizzas)) {\n    //     let id = pizzaId - 1;\n    //     currentOrder.push({ ...menu[id], amount: pizzas[pizzaId] });\n    // }\n    return (\n        <>\n            <PageHeader\n                title=\"Your cart\"\n                extra={[\n                    <Link to={isLogged() ? \"./profile\" : \"./user\"}>\n                        <Button\n                            key=\"account\"\n                            icon={<UserOutlined />}\n                            size=\"large\"\n                        />\n                    </Link>,\n                    <Button\n                        key=\"cart\"\n                        icon={\n                            <Badge count={count}>\n                                <ShoppingCartOutlined />\n                            </Badge>\n                        }\n                        size=\"large\"\n                    />,\n                ]}\n                onBack={() => window.history.back()}\n            />\n            <Container>\n                <Divider>Your order</Divider>\n                {order.length === 0 ? (\n                    <Title level={3} style={{ textAlign: \"center\" }}>\n                        You need to add something to the cart first!\n                    </Title>\n                ) : (\n                    <>\n                        <List\n                            itemLayout=\"horizontal\"\n                            dataSource={order}\n                            renderItem={(p) => (\n                                <ListItem key={p.id} pizza={p} />\n                            )}\n                        />\n                        <Divider />\n                        <Title level={4} style={{ textAlign: \"right\" }}>\n                            Total: ${total} (€{Math.floor(total * 0.8)})\n                        </Title>\n                        <Title level={4} style={{ textAlign: \"right\" }}>\n                            Delivery cost: $5 (€4)\n                        </Title>\n                        <Title level={4} style={{ textAlign: \"right\" }}>\n                            To be payed: ${total + 5} (€\n                            {Math.floor((total + 5) * 0.8)})\n                        </Title>\n                        <Divider>Shipment details</Divider>\n                        {status > 0 ? (\n                            <>\n                                <Title\n                                    level={3}\n                                    style={{ textAlign: \"center\" }}\n                                >\n                                    Your order is placed, order number is{\" \"}\n                                    {status}!\n                                </Title>\n                                <br />\n                                <Title\n                                    level={4}\n                                    style={{ textAlign: \"center\" }}\n                                >\n                                    If you want to be able to access order\n                                    history, register!\n                                </Title>\n                            </>\n                        ) : (\n                            <Form\n                                {...layout}\n                                onFinish={onFinish}\n                                validateMessages={validateMessages}\n                            >\n                                <Form.Item name=\"name\" label=\"Name\">\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"phone\"\n                                    label=\"Phone number\"\n                                    required\n                                    help='Enter the number without \"+7\"'\n                                >\n                                    <Input type=\"number\" prefix=\"+7\" />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"addressFirstLine\"\n                                    label=\"The first line of address\"\n                                    required\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"addressSecondLine\"\n                                    label=\"The second line of address\"\n                                    required\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item wrapperCol={{ offset: 8, span: 8 }}>\n                                    <Button htmlType=\"submit\">Order!</Button>\n                                </Form.Item>\n                            </Form>\n                        )}\n                    </>\n                )}\n            </Container>\n            {/* <Divider>Shipment details</Divider>\n            <Form\n                {...layout}\n                name=\"nest-messages\"\n                onFinish={onFinish}\n                validateMessages={validateMessages}\n            >\n                <Form.Item\n                    name={[\"user\", \"name\"]}\n                    label=\"Name\"\n                    rules={[{ required: true }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    name={[\"user\", \"email\"]}\n                    label=\"Email\"\n                    rules={[{ type: \"email\" }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    name={[\"user\", \"age\"]}\n                    label=\"Age\"\n                    rules={[{ type: \"number\", min: 0, max: 99 }]}\n                >\n                    <InputNumber />\n                </Form.Item>\n                <Form.Item name={[\"user\", \"website\"]} label=\"Website\">\n                    <Input />\n                </Form.Item>\n                <Form.Item name={[\"user\", \"introduction\"]} label=\"Introduction\">\n                    <Input.TextArea />\n                </Form.Item>\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form> */}\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({ pizzas: state.cart });\n\nexport default connect(mapStateToProps)(Cart);\n","import React, { useState } from \"react\";\nimport { Form, Input, Button, Typography } from \"antd\";\n\nimport { login, signup } from \"../util\";\nimport { Redirect } from \"react-router-dom\";\n\nconst { Text } = Typography;\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 8 },\n};\n\nexport default ({ type }) => {\n    const [status, setStatus] = useState(\"\");\n\n    const onLogin = (values) => {\n        setStatus(\"validating\");\n        login(values).then((res) => {\n            if (res.ok) {\n                setStatus(\"success\");\n            } else {\n                setStatus(\"error\");\n            }\n        });\n    };\n\n    const onSignup = (values) => {\n        setStatus(\"validating\");\n        signup(values).then((res) => {\n            if (res.ok) {\n                setStatus(\"success\");\n            } else {\n                setStatus(\"error\");\n            }\n        });\n    };\n    return (\n        <>\n            {status === \"success\" && <Redirect to=\"./profile\" />}\n            <Form {...layout} onFinish={type === \"login\" ? onLogin : onSignup}>\n                <Form.Item\n                    name=\"email\"\n                    required\n                    label=\"E-mail\"\n                    hasFeedback\n                    validateStatus={status}\n                >\n                    <Input type=\"email\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    required\n                    label=\"Password\"\n                    hasFeedback\n                    validateStatus={status}\n                >\n                    <Input.Password />\n                </Form.Item>\n                {type === \"signup\" && (\n                    <Form.Item\n                        name=\"confirm\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please confirm your password!\",\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(rule, value) {\n                                    if (\n                                        !value ||\n                                        getFieldValue(\"password\") === value\n                                    ) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject(\n                                        \"The two passwords that you entered do not match!\"\n                                    );\n                                },\n                            }),\n                        ]}\n                        label=\"Confirm password\"\n                        dependencies={[\"password\"]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                )}\n                {status === \"error\" && (\n                    <Form.Item wrapperCol={{ offset: 8, span: 8 }}>\n                        <Text type=\"danger\">\n                            Check the credentials, account is not found :(\n                        </Text>\n                    </Form.Item>\n                )}\n                <Form.Item wrapperCol={{ offset: 8, span: 8 }}>\n                    <Button htmlType=\"submit\">\n                        {type === \"signup\" ? \"Sign up\" : \"Log in\"}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    );\n};\n","import React, { useState } from \"react\";\nimport { PageHeader, Card } from \"antd\";\n\nimport UserForm from \"../components/UserForm\";\nimport Container from \"../components/Container\";\n\nexport default () => {\n    const [type, setType] = useState(\"login\");\n    const tabList = [\n        { key: \"login\", tab: \"Log In\" },\n        { key: \"signup\", tab: \"Sign Up\" },\n    ];\n\n    return (\n        <>\n            <PageHeader\n                title=\"Registration\"\n                onBack={() => window.history.back()}\n            />\n            <Container>\n                <Card\n                    style={{ width: \"100%\" }}\n                    tabList={tabList}\n                    activeTabKey={type}\n                    onTabChange={(key) => setType(key)}\n                >\n                    <UserForm type={type} />\n                </Card>\n            </Container>\n        </>\n    );\n};\n","import React from \"react\";\nimport { Row } from \"antd\";\n\nexport default ({ children }) => (\n    <Row justify=\"space-between\" align=\"middle\">\n        {children}\n    </Row>\n);\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { PageHeader, Typography, Button, Table, Divider } from \"antd\";\n\nimport Container from \"../components/Container\";\nimport FlexBox from \"../components/FlexBox\";\n\nimport { logout, getEmail, isLogged } from \"../util\";\n\nconst { Text, Title } = Typography;\n\nexport default () => {\n    const [history, setHistory] = useState([]);\n    const [menu, setMenu] = useState([]);\n\n    const columns = [\n        {\n            title: \"Date\",\n            dataIndex: \"datetime\",\n            key: \"datetime\",\n        },\n        {\n            title: \"Pizzas\",\n            dataIndex: \"order_comp\",\n            key: \"pizzas\",\n            render: (pizza) => renderPizza(pizza),\n        },\n        {\n            title: \"Address\",\n            dataIndex: \"address\",\n            key: \"address\",\n        },\n        {\n            title: \"Phone\",\n            dataIndex: \"phone\",\n            key: \"phone\",\n            render: (phone) => \"+7\" + phone,\n        },\n        {\n            title: \"Total\",\n            dataIndex: \"order_comp\",\n            key: \"total\",\n            render: (pizza) => renderTotal(pizza),\n        },\n    ];\n    useEffect(() => {\n        getHistory();\n        getMenu();\n    }, []);\n\n    const getMenu = () => {\n        axios\n            .get(\"/api/pizzas\")\n            .then((res) => res.data)\n            .then((menu) => setMenu(menu));\n    };\n\n    const getHistory = () => {\n        axios\n            .get(\"/api/history\", { params: { email: getEmail() } })\n            .then((res) => res.data.history)\n            .then((history) => setHistory(history));\n    };\n\n    const renderPizza = (pizzas) => {\n        const cell = [];\n        for (let pizzaId in pizzas) {\n            cell.push(\n                <>\n                    <Text>\n                        {pizzas[pizzaId]} of {menu[pizzaId - 1].name}\n                    </Text>\n                    <br />\n                </>\n            );\n        }\n        return cell;\n    };\n\n    const renderTotal = (pizzas) => {\n        let s = 0;\n        for (let pizzaId in pizzas) {\n            s += pizzas[pizzaId] * menu[pizzaId - 1].cost;\n        }\n        s += 5;\n        return (\n            <Text>\n                ${s} (€{Math.floor(s * 0.8)})\n            </Text>\n        );\n    };\n    return (\n        <>\n            <PageHeader title=\"Profile\" onBack={() => window.history.back()} />\n            <Container>\n                {isLogged() ? (\n                    <>\n                        <FlexBox>\n                            <Title level={4}>Welcome back, {getEmail()}!</Title>\n                            <Link to=\"./\">\n                                <Button onClick={() => logout()}>Logout</Button>\n                            </Link>\n                        </FlexBox>\n                        <Divider>Order history</Divider>\n                        {history ? (\n                            <Table columns={columns} dataSource={history} />\n                        ) : (\n                            <Title level={4} style={{ textAlign: \"center\" }}>\n                                When you make at least one order, there will be\n                                history!\n                            </Title>\n                        )}\n                    </>\n                ) : (\n                    <Text>You are not logged in</Text>\n                )}\n            </Container>\n        </>\n    );\n};\n","import { combineReducers } from \"redux\";\nimport cart from \"./cart\";\n\nexport default combineReducers({ cart });\n","import {\n    ADD_TO_CART,\n    REMOVE_FROM_CART,\n    REMOVE_ALL_FROM_CART,\n} from \"../actions/actionTypes\";\n\nexport default (state = {}, action) => {\n    const { id } = action;\n    switch (action.type) {\n        case ADD_TO_CART:\n            let aState = { ...state };\n            aState[id] = (aState[id] || 0) + 1;\n            return aState;\n        case REMOVE_FROM_CART:\n            let rState = {};\n            for (let k of Object.keys(state)) {\n                if (k === id) {\n                    if (state[k] > 1) {\n                        rState[k] = state[k] - 1;\n                    } else {\n                        continue;\n                    }\n                } else {\n                    rState[k] = state[k];\n                }\n            }\n            return rState;\n        case REMOVE_ALL_FROM_CART:\n            let rlState = {};\n            for (let k of Object.keys(state)) {\n                if (k !== id) {\n                    rlState[k] = state[k];\n                }\n            }\n            return rlState;\n        default:\n            return state;\n    }\n};\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers\";\n\nexport default createStore(rootReducer);\n","import * as React from \"react\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport Home from \"./pages/Home\";\nimport Cart from \"./pages/Cart\";\nimport Form from \"./pages/Form\";\nimport Profile from \"./pages/Profile\";\nimport \"./App.css\";\nimport store from \"./store\";\n\nexport default () => (\n    <Provider store={store}>\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/cart\" component={Cart} />\n                <Route exact path=\"/user\" component={Form} />\n                <Route exact path=\"/profile\" component={Profile} />\n            </Switch>\n        </BrowserRouter>\n    </Provider>\n);\n\n// class App extends Component {\n//     // Initialize state\n//     state = { passwords: [] };\n\n//     // Fetch passwords after first mount\n//     componentDidMount() {\n//         this.getPasswords();\n//     }\n\n//     getPasswords = () => {\n//         // Get the passwords and store them in state\n//         fetch(\"/api/passwords\")\n//             .then((res) => res.json())\n//             .then((passwords) => this.setState({ passwords }));\n//     };\n\n//     render() {\n//         const { passwords } = this.state;\n\n//         return (\n//             <div className=\"App\">\n//                 {/* Render the passwords if we have them */}\n//                 {passwords.length ? (\n//                     <div>\n//                         <h1>5 Passwords.</h1>\n//                         <ul className=\"passwords\">\n//                             {/*\n//                 Generally it's bad to use \"index\" as a key.\n//                 It's ok for this example because there will always\n//                 be the same number of passwords, and they never\n//                 change positions in the array.\n//               */}\n//                             {passwords.map((password, index) => (\n//                                 <li key={index}>{password}</li>\n//                             ))}\n//                         </ul>\n//                         <button className=\"more\" onClick={this.getPasswords}>\n//                             Get More\n//                         </button>\n//                     </div>\n//                 ) : (\n//                     // Render a helpful message otherwise\n//                     <div>\n//                         <h1>No passwords :(</h1>\n//                         <button className=\"more\" onClick={this.getPasswords}>\n//                             Try Again?\n//                         </button>\n//                     </div>\n//                 )}\n//             </div>\n//         );\n//     }\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}